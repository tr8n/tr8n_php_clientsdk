{
    "locale": "en-US",
    "name": "English (US)",
    "english_name": "English (US)",
    "native_name": "English (US)",
    "right_to_left": null,
    "enabled": true,
    "google_key": "en",
    "facebook_key": "en-US",
    "myheritage_key": "EN",
    "curse_words": null,
    "contexts": {
        "date": {
            "keyword": "date",
            "description": null,
            "definition": {
                "keys": [
                    "past",
                    "present",
                    "future"
                ],
                "token_expression": "/.*(date|time)(\\d)*$/",
                "variables": [
                    "@date"
                ],
                "token_mapping": [
                    "unsupported",
                    "unsupported",
                    {
                        "past": "{$0}",
                        "present": "{$1}",
                        "future": "{$2}"
                    }
                ],
                "default_rule": "present"
            },
            "rules": {
                "future": {
                    "keyword": "future",
                    "definition": {
                        "conditions": "(< @date (today))",
                        "conditions_expression": [
                            "<",
                            "@date",
                            [
                                "today"
                            ]
                        ]
                    },
                    "description": "{token} is in the past",
                    "examples": null
                },
                "past": {
                    "keyword": "past",
                    "definition": {
                        "conditions": "(> @date (today))",
                        "conditions_expression": [
                            ">",
                            "@date",
                            [
                                "today"
                            ]
                        ]
                    },
                    "description": "{token} is in the future",
                    "examples": null
                },
                "present": {
                    "keyword": "present",
                    "definition": {
                        "conditions": "(= @date (today))",
                        "conditions_expression": [
                            "=",
                            "@date",
                            [
                                "today"
                            ]
                        ]
                    },
                    "description": "{token} is in the present",
                    "examples": null
                }
            }
        },
        "gender": {
            "keyword": "gender",
            "description": null,
            "definition": {
                "keys": [
                    "male",
                    "female",
                    "other"
                ],
                "token_expression": "/.*(user|translator|profile|actor|target)(\\d)*$/",
                "variables": [
                    "@gender"
                ],
                "token_mapping": [
                    {
                        "other": "{$0}"
                    },
                    {
                        "male": "{$0}",
                        "female": "{$1}",
                        "other": "{$0}/{$1}"
                    },
                    {
                        "male": "{$0}",
                        "female": "{$1}",
                        "other": "{$2}"
                    }
                ],
                "default_rule": "other"
            },
            "rules": {
                "female": {
                    "keyword": "female",
                    "definition": {
                        "conditions": "(= 'female' @gender)",
                        "conditions_expression": [
                            "=",
                            "female",
                            "@gender"
                        ]
                    },
                    "description": "{token} is a female",
                    "examples": null
                },
                "male": {
                    "keyword": "male",
                    "definition": {
                        "conditions": "(= 'male' @gender)",
                        "conditions_expression": [
                            "=",
                            "male",
                            "@gender"
                        ]
                    },
                    "description": "{token} is a male",
                    "examples": null
                },
                "other": {
                    "keyword": "other",
                    "definition": {
                        "conditions": null,
                        "conditions_expression": null
                    },
                    "description": "{token}'s gender is unknown",
                    "examples": null
                }
            }
        },
        "genders": {
            "keyword": "genders",
            "description": null,
            "definition": {
                "keys": [
                    "male",
                    "female",
                    "unknown",
                    "other"
                ],
                "token_expression": "/.*(users|profiles|actors|targets)(\\d)*$/",
                "variables": [
                    "@genders"
                ],
                "token_mapping": [
                    "unsupported",
                    "unsupported",
                    "unsupported",
                    {
                        "male": "{$0}",
                        "female": "{$1}",
                        "unknown": "{$2}",
                        "other": "{$3}"
                    }
                ],
                "default_rule": "other"
            },
            "rules": {
                "female": {
                    "keyword": "female",
                    "definition": {
                        "conditions": "(&& (= 1 (count @genders)) (all @genders 'female'))",
                        "conditions_expression": [
                            "&&",
                            [
                                "=",
                                1,
                                [
                                    "count",
                                    "@genders"
                                ]
                            ],
                            [
                                "all",
                                "@genders",
                                "female"
                            ]
                        ]
                    },
                    "description": "{token} contains 1 female",
                    "examples": null
                },
                "male": {
                    "keyword": "male",
                    "definition": {
                        "conditions": "(&& (= 1 (count @genders)) (all @genders 'male'))",
                        "conditions_expression": [
                            "&&",
                            [
                                "=",
                                1,
                                [
                                    "count",
                                    "@genders"
                                ]
                            ],
                            [
                                "all",
                                "@genders",
                                "male"
                            ]
                        ]
                    },
                    "description": "{token} contains 1 male",
                    "examples": null
                },
                "other": {
                    "keyword": "other",
                    "definition": {
                        "conditions": null,
                        "conditions_expression": null
                    },
                    "description": "{token} contains at least 2 people",
                    "examples": null
                },
                "unknown": {
                    "keyword": "unknown",
                    "definition": {
                        "conditions": "(&& (= 1 (count @genders)) (all @genders 'unknown'))",
                        "conditions_expression": [
                            "&&",
                            [
                                "=",
                                1,
                                [
                                    "count",
                                    "@genders"
                                ]
                            ],
                            [
                                "all",
                                "@genders",
                                "unknown"
                            ]
                        ]
                    },
                    "description": "{token} contains 1 person with unknown gender",
                    "examples": null
                }
            }
        },
        "list": {
            "keyword": "list",
            "description": null,
            "definition": {
                "keys": [
                    "one",
                    "other"
                ],
                "token_expression": "/.*(items|list)(\\d)*$/",
                "variables": [
                    "@count"
                ],
                "token_mapping": [
                    "unsupported",
                    {
                        "one": "{$0}",
                        "other": "{$1}"
                    }
                ],
                "default_rule": "other"
            },
            "rules": {
                "one": {
                    "keyword": "one",
                    "definition": {
                        "conditions": "(= 1 @count)",
                        "conditions_expression": [
                            "=",
                            1,
                            "@count"
                        ]
                    },
                    "description": "{token} contains 1 element",
                    "examples": null
                },
                "other": {
                    "keyword": "other",
                    "definition": {
                        "conditions": null,
                        "conditions_expression": null
                    },
                    "description": "{token} contains at least 2 elements",
                    "examples": null
                }
            }
        },
        "number": {
            "keyword": "number",
            "description": null,
            "definition": {
                "keys": [
                    "one",
                    "other"
                ],
                "token_expression": "/.*(count|num|minutes|seconds|hours|sum|total)(\\d)*$/",
                "variables": [
                    "@n"
                ],
                "token_mapping": [
                    {
                        "one": "{$0}",
                        "other": "{$0::plural}"
                    },
                    {
                        "one": "{$0}",
                        "other": "{$1}"
                    }
                ],
                "default_rule": "other"
            },
            "rules": {
                "one": {
                    "keyword": "one",
                    "definition": {
                        "conditions": "(= @n 1)",
                        "conditions_expression": [
                            "=",
                            "@n",
                            1
                        ]
                    },
                    "description": "{token} is 1",
                    "examples": "1"
                },
                "other": {
                    "keyword": "other",
                    "definition": {
                        "conditions": null,
                        "conditions_expression": null
                    },
                    "description": "{token} is not 1",
                    "examples": "0, 2-999; 1.2, 2.07..."
                }
            }
        }
    },
    "cases": {
        "ord": {
            "keyword": "ord",
            "latin_name": "Ordinal",
            "native_name": null,
            "description": "The adjective form of the cardinal numbers",
            "application": "phrase",
            "rules": [
                {
                    "position": 0,
                    "definition": {
                        "conditions": "(&& (match '/1$/' @value) (! (match '/11$/' @value)))",
                        "conditions_expression": [
                            "&&",
                            [
                                "match",
                                "/1$/",
                                "@value"
                            ],
                            [
                                "!",
                                [
                                    "match",
                                    "/11$/",
                                    "@value"
                                ]
                            ]
                        ],
                        "operations": "(append 'st' @value)",
                        "operations_expression": [
                            "append",
                            "st",
                            "@value"
                        ]
                    },
                    "description": "append 'st' if value ends in 1, but not in 11",
                    "examples": "1, 21, 31, 41, 101, 121..."
                },
                {
                    "position": 1,
                    "definition": {
                        "conditions": "(&& (match '/2$/' @value) (! (match '/12$/' @value)))",
                        "conditions_expression": [
                            "&&",
                            [
                                "match",
                                "/2$/",
                                "@value"
                            ],
                            [
                                "!",
                                [
                                    "match",
                                    "/12$/",
                                    "@value"
                                ]
                            ]
                        ],
                        "operations": "(append 'nd' @value)",
                        "operations_expression": [
                            "append",
                            "nd",
                            "@value"
                        ]
                    },
                    "description": "append 'nd' if value ends in 2, but not in 12",
                    "examples": "2, 22, 32, 42, 102, 122..."
                },
                {
                    "position": 2,
                    "definition": {
                        "conditions": "(&& (match '/3$/' @value) (! (match '/13$/' @value)))",
                        "conditions_expression": [
                            "&&",
                            [
                                "match",
                                "/3$/",
                                "@value"
                            ],
                            [
                                "!",
                                [
                                    "match",
                                    "/13$/",
                                    "@value"
                                ]
                            ]
                        ],
                        "operations": "(append 'rd' @value)",
                        "operations_expression": [
                            "append",
                            "rd",
                            "@value"
                        ]
                    },
                    "description": "append 'nd' if value ends in 3, but not in 13",
                    "examples": "3, 23, 33, 43, 103, 123..."
                },
                {
                    "position": 3,
                    "definition": {
                        "conditions": "(true)",
                        "conditions_expression": [
                            "true"
                        ],
                        "operations": "(append 'th' @value)",
                        "operations_expression": [
                            "append",
                            "th",
                            "@value"
                        ]
                    },
                    "description": "append 'th' in all other cases",
                    "examples": "0, 4, 5, 6, 7, 8, 9, 11, 12, 13, 111, 113..."
                }
            ]
        },
        "ordinal": {
            "keyword": "ordinal",
            "latin_name": "Ordinal",
            "native_name": null,
            "description": "The adjective form of the cardinal numbers",
            "application": "phrase",
            "rules": [
                {
                    "position": 0,
                    "definition": {
                        "conditions": "(= 1 @value)",
                        "conditions_expression": [
                            "=",
                            1,
                            "@value"
                        ],
                        "operations": "(replace 1 'first' @value)",
                        "operations_expression": [
                            "replace",
                            1,
                            "first",
                            "@value"
                        ]
                    },
                    "description": "replace 1 with 'first'",
                    "examples": null
                },
                {
                    "position": 1,
                    "definition": {
                        "conditions": "(= 2 @value)",
                        "conditions_expression": [
                            "=",
                            2,
                            "@value"
                        ],
                        "operations": "(replace 2 'first' @value)",
                        "operations_expression": [
                            "replace",
                            2,
                            "first",
                            "@value"
                        ]
                    },
                    "description": "replace 2 with 'second'",
                    "examples": null
                },
                {
                    "position": 2,
                    "definition": {
                        "conditions": "(= 3 @value)",
                        "conditions_expression": [
                            "=",
                            3,
                            "@value"
                        ],
                        "operations": "(replace 3 'third' @value)",
                        "operations_expression": [
                            "replace",
                            3,
                            "third",
                            "@value"
                        ]
                    },
                    "description": "replace 3 with 'third'",
                    "examples": null
                }
            ]
        },
        "plural": {
            "keyword": "plural",
            "latin_name": "Plural",
            "native_name": null,
            "description": "Converts singular form to plural",
            "application": "phrase",
            "rules": [
                {
                    "position": 0,
                    "definition": {
                        "conditions": "(in 'sheep,fish,series,species,money,rice,information,equipment' @value)",
                        "conditions_expression": [
                            "in",
                            "sheep,fish,series,species,money,rice,information,equipment",
                            "@value"
                        ],
                        "operations": "(quote @value)",
                        "operations_expression": [
                            "quote",
                            "@value"
                        ]
                    },
                    "description": "Uncountable word",
                    "examples": null
                },
                {
                    "position": 1,
                    "definition": {
                        "conditions": "(= 'move' @value)",
                        "conditions_expression": [
                            "=",
                            "move",
                            "@value"
                        ],
                        "operations": "(quote 'moves')",
                        "operations_expression": [
                            "quote",
                            "moves"
                        ]
                    },
                    "description": "Irregular word",
                    "examples": null
                },
                {
                    "position": 2,
                    "definition": {
                        "conditions": "(= 'sex' @value)",
                        "conditions_expression": [
                            "=",
                            "sex",
                            "@value"
                        ],
                        "operations": "(quote 'sexes')",
                        "operations_expression": [
                            "quote",
                            "sexes"
                        ]
                    },
                    "description": "Irregular word",
                    "examples": null
                },
                {
                    "position": 3,
                    "definition": {
                        "conditions": "(= 'child' @value)",
                        "conditions_expression": [
                            "=",
                            "child",
                            "@value"
                        ],
                        "operations": "(quote 'children')",
                        "operations_expression": [
                            "quote",
                            "children"
                        ]
                    },
                    "description": "Irregular word",
                    "examples": null
                },
                {
                    "position": 4,
                    "definition": {
                        "conditions": "(= 'person' @value)",
                        "conditions_expression": [
                            "=",
                            "person",
                            "@value"
                        ],
                        "operations": "(quote 'people')",
                        "operations_expression": [
                            "quote",
                            "people"
                        ]
                    },
                    "description": "Irregular word",
                    "examples": null
                },
                {
                    "position": 5,
                    "definition": {
                        "conditions": "(match '/(quiz)$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(quiz)$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(quiz)$/i' '$1zes' @value)",
                        "operations_expression": [
                            "replace",
                            "/(quiz)$/i",
                            "$1zes",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 6,
                    "definition": {
                        "conditions": "(match '/^(ox)$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/^(ox)$/i",
                            "@value"
                        ],
                        "operations": "(replace '/^(ox)$/i' '$1en' @value)",
                        "operations_expression": [
                            "replace",
                            "/^(ox)$/i",
                            "$1en",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 7,
                    "definition": {
                        "conditions": "(match '/([m|l])ouse$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/([m|l])ouse$/i",
                            "@value"
                        ],
                        "operations": "(replace '/([m|l])ouse$/i' '$1ice' @value)",
                        "operations_expression": [
                            "replace",
                            "/([m|l])ouse$/i",
                            "$1ice",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 8,
                    "definition": {
                        "conditions": "(match '/(matr|vert|ind)ix|ex$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(matr|vert|ind)ix|ex$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(matr|vert|ind)ix|ex$/i' '$1ices' @value)",
                        "operations_expression": [
                            "replace",
                            "/(matr|vert|ind)ix|ex$/i",
                            "$1ices",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 9,
                    "definition": {
                        "conditions": "(match '/(x|ch|ss|sh)$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(x|ch|ss|sh)$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(x|ch|ss|sh)$/i' '$1es' @value)",
                        "operations_expression": [
                            "replace",
                            "/(x|ch|ss|sh)$/i",
                            "$1es",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 10,
                    "definition": {
                        "conditions": "(match '/([^aeiouy]|qu)y$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/([^aeiouy]|qu)y$/i",
                            "@value"
                        ],
                        "operations": "(replace '/([^aeiouy]|qu)y$/i' '$1ies' @value)",
                        "operations_expression": [
                            "replace",
                            "/([^aeiouy]|qu)y$/i",
                            "$1ies",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 11,
                    "definition": {
                        "conditions": "(match '/([^aeiouy]|qu)ies$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/([^aeiouy]|qu)ies$/i",
                            "@value"
                        ],
                        "operations": "(replace '/([^aeiouy]|qu)ies$/i' '$1y' @value)",
                        "operations_expression": [
                            "replace",
                            "/([^aeiouy]|qu)ies$/i",
                            "$1y",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 12,
                    "definition": {
                        "conditions": "(match '/(hive)$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(hive)$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(hive)$/i' '$1s' @value)",
                        "operations_expression": [
                            "replace",
                            "/(hive)$/i",
                            "$1s",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 13,
                    "definition": {
                        "conditions": "(match '/(?:([^f])fe|([lr])f)$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(?:([^f])fe|([lr])f)$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(?:([^f])fe|([lr])f)$/i' '$1$2ves' @value)",
                        "operations_expression": [
                            "replace",
                            "/(?:([^f])fe|([lr])f)$/i",
                            "$1$2ves",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 14,
                    "definition": {
                        "conditions": "(match '/sis$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/sis$/i",
                            "@value"
                        ],
                        "operations": "(replace '/sis$/i' 'ses' @value)",
                        "operations_expression": [
                            "replace",
                            "/sis$/i",
                            "ses",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 15,
                    "definition": {
                        "conditions": "(match '/([ti])um$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/([ti])um$/i",
                            "@value"
                        ],
                        "operations": "(replace '/([ti])um$/i' '$1a' @value)",
                        "operations_expression": [
                            "replace",
                            "/([ti])um$/i",
                            "$1a",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 16,
                    "definition": {
                        "conditions": "(match '/(buffal|tomat|potat)o$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(buffal|tomat|potat)o$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(buffal|tomat|potat)o$/i' '$1oes' @value)",
                        "operations_expression": [
                            "replace",
                            "/(buffal|tomat|potat)o$/i",
                            "$1oes",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 17,
                    "definition": {
                        "conditions": "(match '/(bu)s$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(bu)s$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(bu)s$/i' '$1ses' @value)",
                        "operations_expression": [
                            "replace",
                            "/(bu)s$/i",
                            "$1ses",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 18,
                    "definition": {
                        "conditions": "(match '/(alias|status)$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(alias|status)$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(alias|status)$/i' '$1es' @value)",
                        "operations_expression": [
                            "replace",
                            "/(alias|status)$/i",
                            "$1es",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 19,
                    "definition": {
                        "conditions": "(match '/(octop)us$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(octop)us$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(octop)us$/i' '$1i' @value)",
                        "operations_expression": [
                            "replace",
                            "/(octop)us$/i",
                            "$1i",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 20,
                    "definition": {
                        "conditions": "(match '/(ax|test)is$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(ax|test)is$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(ax|test)is$/i' '$1es' @value)",
                        "operations_expression": [
                            "replace",
                            "/(ax|test)is$/i",
                            "$1es",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 21,
                    "definition": {
                        "conditions": "(match '/us$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/us$/i",
                            "@value"
                        ],
                        "operations": "(replace '/us$/i' '$1es' @value)",
                        "operations_expression": [
                            "replace",
                            "/us$/i",
                            "$1es",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 22,
                    "definition": {
                        "conditions": "(match '/s$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/s$/i",
                            "@value"
                        ],
                        "operations": "(replace '/s$/i' 's' @value)",
                        "operations_expression": [
                            "replace",
                            "/s$/i",
                            "s",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 23,
                    "definition": {
                        "conditions": "(match '/$/' @value)",
                        "conditions_expression": [
                            "match",
                            "/$/",
                            "@value"
                        ],
                        "operations": "(replace '/$/' 's' @value)",
                        "operations_expression": [
                            "replace",
                            "/$/",
                            "s",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                }
            ]
        },
        "pos": {
            "keyword": "pos",
            "latin_name": "Possessive",
            "native_name": null,
            "description": "Used to indicate possession (i.e., ownership). It is usually created by adding 's to the word",
            "application": "phrase",
            "rules": [
                {
                    "position": 0,
                    "definition": {
                        "conditions": "(match '/s$/' @value)",
                        "conditions_expression": [
                            "match",
                            "/s$/",
                            "@value"
                        ],
                        "operations": "(append \"'\" @value)",
                        "operations_expression": [
                            "append",
                            "'",
                            "@value"
                        ]
                    },
                    "description": "if value ends in s, append '",
                    "examples": null
                },
                {
                    "position": 1,
                    "definition": {
                        "conditions": "(true)",
                        "conditions_expression": [
                            "true"
                        ],
                        "operations": "(append \"'s\" @value)",
                        "operations_expression": [
                            "append",
                            "'s",
                            "@value"
                        ]
                    },
                    "description": "in all other cases, append 's",
                    "examples": null
                }
            ]
        },
        "singular": {
            "keyword": "singular",
            "latin_name": "Singular",
            "native_name": null,
            "description": "Converts plural form to singular",
            "application": "phrase",
            "rules": [
                {
                    "position": 0,
                    "definition": {
                        "conditions": "(in 'sheep,fish,series,species,money,rice,information,equipment' @value)",
                        "conditions_expression": [
                            "in",
                            "sheep,fish,series,species,money,rice,information,equipment",
                            "@value"
                        ],
                        "operations": "@value",
                        "operations_expression": "@value"
                    },
                    "description": "Uncountable word",
                    "examples": null
                },
                {
                    "position": 1,
                    "definition": {
                        "conditions": "(= 'moves' @value)",
                        "conditions_expression": [
                            "=",
                            "moves",
                            "@value"
                        ],
                        "operations": "(quote 'move')",
                        "operations_expression": [
                            "quote",
                            "move"
                        ]
                    },
                    "description": "Irregular word",
                    "examples": null
                },
                {
                    "position": 2,
                    "definition": {
                        "conditions": "(= 'sexes' @value)",
                        "conditions_expression": [
                            "=",
                            "sexes",
                            "@value"
                        ],
                        "operations": "(quote 'sex')",
                        "operations_expression": [
                            "quote",
                            "sex"
                        ]
                    },
                    "description": "Irregular word",
                    "examples": null
                },
                {
                    "position": 3,
                    "definition": {
                        "conditions": "(= 'children' @value)",
                        "conditions_expression": [
                            "=",
                            "children",
                            "@value"
                        ],
                        "operations": "(quote 'child')",
                        "operations_expression": [
                            "quote",
                            "child"
                        ]
                    },
                    "description": "Irregular word",
                    "examples": null
                },
                {
                    "position": 4,
                    "definition": {
                        "conditions": "(= 'people' @value)",
                        "conditions_expression": [
                            "=",
                            "people",
                            "@value"
                        ],
                        "operations": "(quote 'person')",
                        "operations_expression": [
                            "quote",
                            "person"
                        ]
                    },
                    "description": "Irregular word",
                    "examples": null
                },
                {
                    "position": 5,
                    "definition": {
                        "conditions": "(match '/(n)ews$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(n)ews$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(n)ews$/i' '$1ews' @value)",
                        "operations_expression": [
                            "replace",
                            "/(n)ews$/i",
                            "$1ews",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 6,
                    "definition": {
                        "conditions": "(match '/([ti])a$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/([ti])a$/i",
                            "@value"
                        ],
                        "operations": "(replace '/([ti])a$/i' '$1um' @value)",
                        "operations_expression": [
                            "replace",
                            "/([ti])a$/i",
                            "$1um",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 7,
                    "definition": {
                        "conditions": "(match '/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i",
                            "@value"
                        ],
                        "operations": "(replace '/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i' '$1$2sis' @value)",
                        "operations_expression": [
                            "replace",
                            "/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i",
                            "$1$2sis",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 8,
                    "definition": {
                        "conditions": "(match '/(^analy)ses$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(^analy)ses$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(^analy)ses$/i' '$1sis' @value)",
                        "operations_expression": [
                            "replace",
                            "/(^analy)ses$/i",
                            "$1sis",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 9,
                    "definition": {
                        "conditions": "(match '/([^f])ves$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/([^f])ves$/i",
                            "@value"
                        ],
                        "operations": "(replace '/([^f])ves$/i' '$1fe' @value)",
                        "operations_expression": [
                            "replace",
                            "/([^f])ves$/i",
                            "$1fe",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 10,
                    "definition": {
                        "conditions": "(match '/(hive)s$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(hive)s$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(hive)s$/i' '$1' @value)",
                        "operations_expression": [
                            "replace",
                            "/(hive)s$/i",
                            "$1",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 11,
                    "definition": {
                        "conditions": "(match '/(tive)s$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(tive)s$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(tive)s$/i' '$1' @value)",
                        "operations_expression": [
                            "replace",
                            "/(tive)s$/i",
                            "$1",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 12,
                    "definition": {
                        "conditions": "(match '/([lr])ves$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/([lr])ves$/i",
                            "@value"
                        ],
                        "operations": "(replace '/([lr])ves$/i' '$1f' @value)",
                        "operations_expression": [
                            "replace",
                            "/([lr])ves$/i",
                            "$1f",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 13,
                    "definition": {
                        "conditions": "(match '/([^aeiouy]|qu)ies$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/([^aeiouy]|qu)ies$/i",
                            "@value"
                        ],
                        "operations": "(replace '/([^aeiouy]|qu)ies$/i' '$1y' @value)",
                        "operations_expression": [
                            "replace",
                            "/([^aeiouy]|qu)ies$/i",
                            "$1y",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 14,
                    "definition": {
                        "conditions": "(match '/(s)eries$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(s)eries$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(s)eries$/i' '$1eries' @value)",
                        "operations_expression": [
                            "replace",
                            "/(s)eries$/i",
                            "$1eries",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 15,
                    "definition": {
                        "conditions": "(match '/(m)ovies$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(m)ovies$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(m)ovies$/i' '$1ovie' @value)",
                        "operations_expression": [
                            "replace",
                            "/(m)ovies$/i",
                            "$1ovie",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 16,
                    "definition": {
                        "conditions": "(match '/(x|ch|ss|sh)es$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(x|ch|ss|sh)es$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(x|ch|ss|sh)es$/i' '$1' @value)",
                        "operations_expression": [
                            "replace",
                            "/(x|ch|ss|sh)es$/i",
                            "$1",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 17,
                    "definition": {
                        "conditions": "(match '/([m|l])ice$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/([m|l])ice$/i",
                            "@value"
                        ],
                        "operations": "(replace '/([m|l])ice$/i' '$1ouse' @value)",
                        "operations_expression": [
                            "replace",
                            "/([m|l])ice$/i",
                            "$1ouse",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 18,
                    "definition": {
                        "conditions": "(match '/(bus)es$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(bus)es$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(bus)es$/i' '$1' @value)",
                        "operations_expression": [
                            "replace",
                            "/(bus)es$/i",
                            "$1",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 19,
                    "definition": {
                        "conditions": "(match '/(o)es$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(o)es$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(o)es$/i' '$1' @value)",
                        "operations_expression": [
                            "replace",
                            "/(o)es$/i",
                            "$1",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 20,
                    "definition": {
                        "conditions": "(match '/(shoe)s$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(shoe)s$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(shoe)s$/i' '$1' @value)",
                        "operations_expression": [
                            "replace",
                            "/(shoe)s$/i",
                            "$1",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 21,
                    "definition": {
                        "conditions": "(match '/(cris|ax|test)es$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(cris|ax|test)es$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(cris|ax|test)es$/i' '$1is' @value)",
                        "operations_expression": [
                            "replace",
                            "/(cris|ax|test)es$/i",
                            "$1is",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 22,
                    "definition": {
                        "conditions": "(match '/(octop|vir)i$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(octop|vir)i$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(octop|vir)i$/i' '$1us' @value)",
                        "operations_expression": [
                            "replace",
                            "/(octop|vir)i$/i",
                            "$1us",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 23,
                    "definition": {
                        "conditions": "(match '/(alias|status)es$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(alias|status)es$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(alias|status)es$/i' '$1' @value)",
                        "operations_expression": [
                            "replace",
                            "/(alias|status)es$/i",
                            "$1",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 24,
                    "definition": {
                        "conditions": "(match '/^(ox)en$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/^(ox)en$/i",
                            "@value"
                        ],
                        "operations": "(replace '/^(ox)en$/i' '$1' @value)",
                        "operations_expression": [
                            "replace",
                            "/^(ox)en$/i",
                            "$1",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 25,
                    "definition": {
                        "conditions": "(match '/(vert|ind)ices$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(vert|ind)ices$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(vert|ind)ices$/i' '$1ex' @value)",
                        "operations_expression": [
                            "replace",
                            "/(vert|ind)ices$/i",
                            "$1ex",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 26,
                    "definition": {
                        "conditions": "(match '/(matr)ices$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(matr)ices$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(matr)ices$/i' '$1ix' @value)",
                        "operations_expression": [
                            "replace",
                            "/(matr)ices$/i",
                            "$1ix",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 27,
                    "definition": {
                        "conditions": "(match '/(quiz)zes$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(quiz)zes$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(quiz)zes$/i' '$1' @value)",
                        "operations_expression": [
                            "replace",
                            "/(quiz)zes$/i",
                            "$1",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 28,
                    "definition": {
                        "conditions": "(match '/(us)es$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/(us)es$/i",
                            "@value"
                        ],
                        "operations": "(replace '/(us)es$/i' '$1' @value)",
                        "operations_expression": [
                            "replace",
                            "/(us)es$/i",
                            "$1",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                },
                {
                    "position": 29,
                    "definition": {
                        "conditions": "(match '/s$/i' @value)",
                        "conditions_expression": [
                            "match",
                            "/s$/i",
                            "@value"
                        ],
                        "operations": "(replace '/s$/i' '' @value)",
                        "operations_expression": [
                            "replace",
                            "/s$/i",
                            "",
                            "@value"
                        ]
                    },
                    "description": null,
                    "examples": null
                }
            ]
        },
        "times": {
            "keyword": "times",
            "latin_name": "Iteration",
            "native_name": null,
            "description": "The iteration form of the cardinal numbers",
            "application": "phrase",
            "rules": [
                {
                    "position": 0,
                    "definition": {
                        "conditions": "(= 1 @value)",
                        "conditions_expression": [
                            "=",
                            1,
                            "@value"
                        ],
                        "operations": "(replace '1' 'once' @value)",
                        "operations_expression": [
                            "replace",
                            "1",
                            "once",
                            "@value"
                        ]
                    },
                    "description": "replace '1' with 'once'",
                    "examples": null
                },
                {
                    "position": 1,
                    "definition": {
                        "conditions": "(= 2 @value)",
                        "conditions_expression": [
                            "=",
                            2,
                            "@value"
                        ],
                        "operations": "(replace '2' 'twice' @value)",
                        "operations_expression": [
                            "replace",
                            "2",
                            "twice",
                            "@value"
                        ]
                    },
                    "description": "replace '2' with 'twice'",
                    "examples": null
                },
                {
                    "position": 2,
                    "definition": {
                        "conditions": "(true)",
                        "conditions_expression": [
                            "true"
                        ],
                        "operations": "(append ' times' @value)",
                        "operations_expression": [
                            "append",
                            " times",
                            "@value"
                        ]
                    },
                    "description": "in all other cases, append x times",
                    "examples": null
                }
            ]
        }
    }
}